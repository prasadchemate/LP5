import tensorflow as tf
from tensorflow.keras.datasets import boston_housing
import pandas as pd
import numpy as np
from sklearn.preprocessing import normalize
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import  Dense
from tensorflow.keras.optimizers import Adam

(x_train, y_train) , (x_test, y_test) = boston_housing.load_data()
print(x_train.shape)
print(y_train.shape)

# print(x_train[-6:-1])

actual_output = y_test[100]

x_train= normalize(x_train)
x_test= normalize(x_test)


input_value = x_test[100]
print("Input Value is", input_value)

model = Sequential()
model.add(Dense(128, activation="relu", input_shape= x_train[0].shape ))
model.add(Dense(64, activation="relu"))
model.add(Dense(32, activation="relu"))
model.add(Dense(1))

model.compile(optimizer=Adam(learning_rate=0.001) , loss="mse" )
model.fit(x_train, y_train, batch_size=1, epochs=100, verbose=1, validation_data=(x_test,y_test))
predicted_output = model.predict([list(input_value)])
# loss = model.evaluate(x_test, y_test, verbose=0)
# print(f"Mean Squared Error (MSE): {loss:.2f}")

print("actual output is ", actual_output)
print("predicted output is", predicted_output)